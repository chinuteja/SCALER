'''
Problem Description
Given a 2D integer matrix A of size N x N, find a B x B submatrix 
where B<= N and B>= 1, such that the sum of all the elements in the
submatrix is maximum.


 A = [
        [1, 1, 1, 1, 1]
        [2, 2, 2, 2, 2]
        [3, 8, 6, 7, 3]
        [4, 4, 4, 4, 4]
        [5, 5, 5, 5, 5]
     ]
 B = 3

 Maximum sum 3 x 3 matrix is
    8 6 7
    4 4 4
    5 5 5
    Sum = 48

'''

class Solution:


    def siliding_window(self,array,k):

        sum_ = 0
        for i in range(k):
            sum_ += array[i]

        s = 1
        e = k
        max_sum = -100000
        while(e<len(array)):

            sum_ = sum_ + array[e] - array[s-1]
            print(sum_)
            max_sum = max(max_sum,sum_)
            s +=1 
            e += 1

        return max_sum



    # @param A : list of list of integers
    # @param B : integer
    # @return an integer
    def solve(self, A, B):

        ## applying sliding window first col wise
        arr = []
        N = len(A)

        for i in range(N-B+1):
            temp = []
            for j in range(N):
                temp.append(0)
            arr.append(temp)
        # print("*"*50)
        # print(len(arr),len(arr[0]))
        for col in range(N):

            sum_ = 0
            for row in range(B):
                sum_ += A[row][col]

            arr[0][col] = sum_

            for row in range(B,N):
                sum_ = sum_ + A[row][col] - A[row-B][col]
                # print("row B",row,B)
                arr[row-B+1][col] = sum_
        
        # applying sliding window for rows to get max row sum
        ans = -1000000
        print(arr)
        for row in range(len(arr)):
            temp = arr[row]
            sum_ = self.siliding_window(temp,B)
            # print(temp)
            # print(sum_)
            ans = max(ans,sum_)
        return ans

A = [
        [1, 1, 1, 1, 1],
        [2, 2, 2, 2, 2],
        [3, 8, 6, 7, 3],
        [4, 4, 4, 4, 4],
        [5, 5, 5, 5, 5]
     ]
B = 3
A = [[43,78,87,13,-37,91,34,-85,-44,61,-88,-89,59,-49,38,70,24,7,-93,84,51,1,-11,58,-59],[90,-87,-88,-45,-40,-7,-28,-98,-24,43,73,-34,-49,-25,28,32,61,-31,3,29,7,-8,-49,53,92],[70,19,-28,-93,-6,5,-60,83,-38,-91,-93,-62,60,-29,71,-46,47,14,23,-71,-11,66,-13,56,-68],[-30,39,-34,22,-17,60,53,5,-9,-41,86,-13,-71,-58,17,-55,56,88,-48,54,-34,-67,60,19,-69],[38,-33,76,-2,14,20,-47,-93,-31,-84,22,-58,-93,-37,-40,47,93,-70,17,-57,76,14,-74,17,34],[-80,71,92,64,54,-34,-7,-36,75,-100,-88,0,51,-24,79,43,-23,89,61,85,-28,-66,44,61,63],[4,46,-12,8,57,-70,23,-36,-26,46,-63,81,18,-89,-8,91,-68,23,-39,91,-39,30,-2,69,-9],[-100,79,17,17,14,95,-59,36,-33,-72,-47,9,73,81,3,69,-84,-17,67,85,-98,-70,57,-19,67],[10,-34,-13,71,-23,-55,64,-62,-29,-53,15,92,11,-43,-95,-47,71,80,40,30,-25,20,90,77,98],[86,-96,-11,-69,44,88,-90,18,19,-41,27,-91,19,-21,16,0,96,-47,-42,-70,93,-94,-51,-46,-28],[60,-6,-46,33,46,-71,-29,-72,59,-59,-79,-12,66,-67,-15,-30,29,-39,-40,-92,82,62,6,-22,79],[-3,-13,38,-31,83,40,95,-34,-67,9,57,17,34,-47,35,-42,93,-57,-7,-34,51,40,-6,37,74],[12,-3,51,-5,-83,-8,-8,-63,30,-87,-4,10,89,-72,-91,86,44,-60,82,69,20,93,-8,62,-86],[27,-93,94,5,13,-89,13,-7,-36,-97,95,62,81,46,9,-52,68,-76,11,54,-65,27,-67,-60,-38],[27,77,-83,40,42,0,-100,58,-24,54,35,-70,-69,-5,37,-77,22,27,-71,-89,-89,54,-20,-47,-7],[21,85,28,-57,-100,55,-29,-30,-48,75,-69,-60,34,-60,86,-66,-52,39,65,96,12,-38,-48,31,87],[-36,57,-52,56,70,-50,82,1,-7,-1,32,-56,31,-25,-96,-50,-74,-34,38,-99,-77,-57,-59,80,-5],[18,-41,63,-72,29,-12,-46,-87,79,69,-34,-21,77,-63,-98,15,-8,23,-28,-52,23,53,48,95,97],[8,8,-89,93,-35,81,-98,-90,-72,-44,5,65,-77,69,15,-47,-95,-16,-22,45,-60,-67,-15,0,68],[94,-67,-15,48,-19,-68,-44,10,-28,82,1,6,-65,-40,-29,27,37,43,68,-67,95,71,-97,42,-89],[-21,-66,12,93,30,61,-66,-42,26,6,91,-57,88,-73,19,-16,-76,-7,-65,-76,-6,82,-33,-73,-95],[46,-14,89,40,-63,-50,59,78,56,-23,-97,-58,0,-89,-75,43,95,-84,-85,-96,-94,68,-59,35,-2],[25,13,-77,12,-82,-43,96,39,-14,-6,-54,-57,22,11,-20,-45,58,-53,-30,90,-27,27,-87,-46,-4],[-28,-50,-59,-59,-54,25,-87,-76,29,-5,-97,94,93,-33,87,-60,-21,-59,25,34,-40,-100,7,-79,-8],[-7,17,17,-97,43,-7,-61,-89,25,-72,78,48,-50,-8,-56,-46,-77,53,-64,47,46,-74,-39,4,-62]]

B = 22
print(len(A[0]),len(A))
sol = Solution()
print(sol.solve(A,B))